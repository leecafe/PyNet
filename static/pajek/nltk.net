*Vertices 343
1 "app.chartparser_app"
2 "app.chunkparser_app"
3 "app.collocations_app"
4 "app.concordance_app"
5 "app.nemo_app"
6 "app.rdparser_app"
7 "app.srparser_app"
8 "app.wordfreq_app"
9 "app.wordnet_app"
10 "app.__init__"
11 "book"
12 "ccg.api"
13 "ccg.chart"
14 "ccg.combinator"
15 "ccg.lexicon"
16 "ccg.logic"
17 "ccg.__init__"
18 "chat.eliza"
19 "chat.iesha"
20 "chat.rude"
21 "chat.suntsu"
22 "chat.util"
23 "chat.zen"
24 "chat.__init__"
25 "chunk.api"
26 "chunk.named_entity"
27 "chunk.regexp"
28 "chunk.util"
29 "chunk.__init__"
30 "classify.api"
31 "classify.decisiontree"
32 "classify.maxent"
33 "classify.megam"
34 "classify.naivebayes"
35 "classify.positivenaivebayes"
36 "classify.rte_classify"
37 "classify.scikitlearn"
38 "classify.senna"
39 "classify.svm"
40 "classify.tadm"
41 "classify.textcat"
42 "classify.util"
43 "classify.weka"
44 "classify.__init__"
45 "cluster.api"
46 "cluster.em"
47 "cluster.gaac"
48 "cluster.kmeans"
49 "cluster.util"
50 "cluster.__init__"
51 "collections"
52 "collocations"
53 "compat"
54 "corpus.europarl_raw"
55 "corpus.reader.aligned"
56 "corpus.reader.api"
57 "corpus.reader.bnc"
58 "corpus.reader.bracket_parse"
59 "corpus.reader.categorized_sents"
60 "corpus.reader.chasen"
61 "corpus.reader.childes"
62 "corpus.reader.chunked"
63 "corpus.reader.cmudict"
64 "corpus.reader.comparative_sents"
65 "corpus.reader.conll"
66 "corpus.reader.crubadan"
67 "corpus.reader.dependency"
68 "corpus.reader.framenet"
69 "corpus.reader.ieer"
70 "corpus.reader.indian"
71 "corpus.reader.ipipan"
72 "corpus.reader.knbc"
73 "corpus.reader.lin"
74 "corpus.reader.mte"
75 "corpus.reader.nkjp"
76 "corpus.reader.nombank"
77 "corpus.reader.nps_chat"
78 "corpus.reader.opinion_lexicon"
79 "corpus.reader.panlex_lite"
80 "corpus.reader.panlex_swadesh"
81 "corpus.reader.pl196x"
82 "corpus.reader.plaintext"
83 "corpus.reader.ppattach"
84 "corpus.reader.propbank"
85 "corpus.reader.pros_cons"
86 "corpus.reader.reviews"
87 "corpus.reader.rte"
88 "corpus.reader.semcor"
89 "corpus.reader.senseval"
90 "corpus.reader.sentiwordnet"
91 "corpus.reader.sinica_treebank"
92 "corpus.reader.string_category"
93 "corpus.reader.switchboard"
94 "corpus.reader.tagged"
95 "corpus.reader.timit"
96 "corpus.reader.toolbox"
97 "corpus.reader.twitter"
98 "corpus.reader.udhr"
99 "corpus.reader.util"
100 "corpus.reader.verbnet"
101 "corpus.reader.wordlist"
102 "corpus.reader.wordnet"
103 "corpus.reader.xmldocs"
104 "corpus.reader.ycoe"
105 "corpus.reader.__init__"
106 "corpus.util"
107 "corpus.__init__"
108 "data"
109 "decorators"
110 "downloader"
111 "draw.cfg"
112 "draw.dispersion"
113 "draw.table"
114 "draw.tree"
115 "draw.util"
116 "draw.__init__"
117 "featstruct"
118 "grammar"
119 "help"
120 "inference.api"
121 "inference.discourse"
122 "inference.mace"
123 "inference.nonmonotonic"
124 "inference.prover9"
125 "inference.resolution"
126 "inference.tableau"
127 "inference.__init__"
128 "internals"
129 "jsontags"
130 "lazyimport"
131 "lm.api"
132 "lm.counter"
133 "lm.models"
134 "lm.preprocessing"
135 "lm.smoothing"
136 "lm.util"
137 "lm.vocabulary"
138 "lm.__init__"
139 "metrics.agreement"
140 "metrics.aline"
141 "metrics.association"
142 "metrics.confusionmatrix"
143 "metrics.distance"
144 "metrics.paice"
145 "metrics.scores"
146 "metrics.segmentation"
147 "metrics.spearman"
148 "metrics.__init__"
149 "misc.babelfish"
150 "misc.chomsky"
151 "misc.minimalset"
152 "misc.sort"
153 "misc.wordfinder"
154 "misc.__init__"
155 "parse.api"
156 "parse.bllip"
157 "parse.chart"
158 "parse.corenlp"
159 "parse.dependencygraph"
160 "parse.earleychart"
161 "parse.evaluate"
162 "parse.featurechart"
163 "parse.generate"
164 "parse.malt"
165 "parse.nonprojectivedependencyparser"
166 "parse.pchart"
167 "parse.projectivedependencyparser"
168 "parse.recursivedescent"
169 "parse.shiftreduce"
170 "parse.stanford"
171 "parse.transitionparser"
172 "parse.util"
173 "parse.viterbi"
174 "parse.__init__"
175 "probability"
176 "sem.boxer"
177 "sem.chat80"
178 "sem.cooper_storage"
179 "sem.drt"
180 "sem.drt_glue_demo"
181 "sem.evaluate"
182 "sem.glue"
183 "sem.hole"
184 "sem.lfg"
185 "sem.linearlogic"
186 "sem.logic"
187 "sem.relextract"
188 "sem.skolemize"
189 "sem.util"
190 "sem.__init__"
191 "sentiment.sentiment_analyzer"
192 "sentiment.util"
193 "sentiment.vader"
194 "sentiment.__init__"
195 "stem.api"
196 "stem.arlstem"
197 "stem.cistem"
198 "stem.isri"
199 "stem.lancaster"
200 "stem.porter"
201 "stem.regexp"
202 "stem.rslp"
203 "stem.snowball"
204 "stem.util"
205 "stem.wordnet"
206 "stem.__init__"
207 "tag.api"
208 "tag.brill"
209 "tag.brill_trainer"
210 "tag.crf"
211 "tag.hmm"
212 "tag.hunpos"
213 "tag.mapping"
214 "tag.perceptron"
215 "tag.senna"
216 "tag.sequential"
217 "tag.stanford"
218 "tag.tnt"
219 "tag.util"
220 "tag.__init__"
221 "tbl.api"
222 "tbl.demo"
223 "tbl.erroranalysis"
224 "tbl.feature"
225 "tbl.rule"
226 "tbl.template"
227 "tbl.__init__"
228 "test.all"
229 "test.childes_fixt"
230 "test.classify_fixt"
231 "test.compat_fixt"
232 "test.corpus_fixt"
233 "test.discourse_fixt"
234 "test.doctest_nose_plugin"
235 "test.gensim_fixt"
236 "test.gluesemantics_malt_fixt"
237 "test.inference_fixt"
238 "test.nonmonotonic_fixt"
239 "test.portuguese_en_fixt"
240 "test.probability_fixt"
241 "test.runtests"
242 "test.segmentation_fixt"
243 "test.semantics_fixt"
244 "test.translate_fixt"
245 "test.unit.lm.test_counter"
246 "test.unit.lm.test_models"
247 "test.unit.lm.test_preprocessing"
248 "test.unit.lm.test_vocabulary"
249 "test.unit.lm.__init__"
250 "test.unit.test_2x_compat"
251 "test.unit.test_aline"
252 "test.unit.test_brill"
253 "test.unit.test_cfd_mutation"
254 "test.unit.test_cfg2chomsky"
255 "test.unit.test_chunk"
256 "test.unit.test_classify"
257 "test.unit.test_collocations"
258 "test.unit.test_concordance"
259 "test.unit.test_corenlp"
260 "test.unit.test_corpora"
261 "test.unit.test_corpus_views"
262 "test.unit.test_data"
263 "test.unit.test_disagreement"
264 "test.unit.test_hmm"
265 "test.unit.test_json2csv_corpus"
266 "test.unit.test_naivebayes"
267 "test.unit.test_nombank"
268 "test.unit.test_pos_tag"
269 "test.unit.test_rte_classify"
270 "test.unit.test_seekable_unicode_stream_reader"
271 "test.unit.test_senna"
272 "test.unit.test_stem"
273 "test.unit.test_tag"
274 "test.unit.test_tgrep"
275 "test.unit.test_tokenize"
276 "test.unit.test_twitter_auth"
277 "test.unit.test_wordnet"
278 "test.unit.translate.test_bleu"
279 "test.unit.translate.test_gdfa"
280 "test.unit.translate.test_ibm1"
281 "test.unit.translate.test_ibm2"
282 "test.unit.translate.test_ibm3"
283 "test.unit.translate.test_ibm4"
284 "test.unit.translate.test_ibm5"
285 "test.unit.translate.test_ibm_model"
286 "test.unit.translate.test_nist"
287 "test.unit.translate.test_stack_decoder"
288 "test.unit.translate.__init__"
289 "test.unit.utils"
290 "test.unit.__init__"
291 "test.wordnet_fixt"
292 "test.__init__"
293 "text"
294 "tgrep"
295 "tokenize.api"
296 "tokenize.casual"
297 "tokenize.mwe"
298 "tokenize.nist"
299 "tokenize.punkt"
300 "tokenize.regexp"
301 "tokenize.repp"
302 "tokenize.sexpr"
303 "tokenize.simple"
304 "tokenize.sonority_sequencing"
305 "tokenize.stanford"
306 "tokenize.stanford_segmenter"
307 "tokenize.texttiling"
308 "tokenize.toktok"
309 "tokenize.treebank"
310 "tokenize.util"
311 "tokenize.__init__"
312 "toolbox"
313 "translate.api"
314 "translate.bleu_score"
315 "translate.chrf_score"
316 "translate.gale_church"
317 "translate.gdfa"
318 "translate.gleu_score"
319 "translate.ibm1"
320 "translate.ibm2"
321 "translate.ibm3"
322 "translate.ibm4"
323 "translate.ibm5"
324 "translate.ibm_model"
325 "translate.meteor_score"
326 "translate.metrics"
327 "translate.nist_score"
328 "translate.phrase_based"
329 "translate.ribes_score"
330 "translate.stack_decoder"
331 "translate.__init__"
332 "tree"
333 "treeprettyprinter"
334 "treetransforms"
335 "twitter.api"
336 "twitter.common"
337 "twitter.twitterclient"
338 "twitter.twitter_demo"
339 "twitter.util"
340 "twitter.__init__"
341 "util"
342 "wsd"
343 "__init__"
*Arcs :1 "SAMPLK1"
9 51 1
15 51 1
31 51 1
32 51 1
34 51 1
35 51 1
51 51 1
56 51 1
61 51 1
68 51 1
73 51 1
80 51 1
100 51 1
102 51 1
123 51 1
125 51 1
132 51 1
137 51 1
151 51 1
159 51 1
167 51 1
175 51 1
186 51 1
187 51 1
191 51 1
193 192 1
208 51 1
209 51 1
213 51 1
214 51 1
248 51 1
277 51 1
280 51 1
281 51 1
282 51 1
283 51 1
284 51 1
285 51 1
287 51 1
293 51 1
299 51 1
313 51 1
314 51 1
315 51 1
317 51 1
318 51 1
319 51 1
320 51 1
321 51 1
322 51 1
323 51 1
324 51 1
327 51 1
330 51 1
333 51 1
341 51 1
